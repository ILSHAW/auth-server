generator Client {
    provider = "prisma-client-js"
}

datasource Database {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id       String   @map("id")       @default(uuid())
	login    String   @map("login")
    password String   @map("password")

	session  Session?

    created  DateTime @map("created")  @default(now())
    updated  DateTime @map("updated")  @default(now())  @updatedAt

    @@id([id])
    @@map("user")
	@@unique([login])
}

model Session {
	id      String   @map("id")      @default(uuid())
    user_id String   @map("user_id")

	user    User                                      @relation(fields: [user_id], references: [id], onDelete: Cascade)
    access  Access?
    refresh Refresh?

	created DateTime @map("created") @default(now())
    updated DateTime @map("updated") @default(now())  @updatedAt

	@@id([id])
    @@map("session")
    @@unique([user_id])
}

model Access {
    id         String   @map("id")         @default(uuid())
    token      String   @map("token")
    session_id String   @map("session_id")

    session    Session                                      @relation(fields: [session_id], references: [id], onDelete: Cascade)

    created    DateTime @map("created")    @default(now())
    updated    DateTime @map("updated")    @default(now())  @updatedAt

    @@id([id])
    @@map("access")
    @@unique([session_id])
    @@unique([session_id, token])
}

model Refresh {
    id         String   @map("id")         @default(uuid())
    token      String   @map("token")
    session_id String   @map("session_id")

    session    Session                                      @relation(fields: [session_id], references: [id], onDelete: Cascade)

    created    DateTime @map("created")    @default(now())
    updated    DateTime @map("updated")    @default(now())  @updatedAt

    @@id([id])
    @@map("refresh")
    @@unique([session_id])
    @@unique([session_id, token])
}